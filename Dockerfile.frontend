# Frontend React Dockerfile
FROM node:20-alpine

WORKDIR /app

# Copier les fichiers de configuration du frontend (incluant package-lock.json)
COPY moduleProspec-1dc4f634c6c14f0913f8052d2523c56f04d7738b/package.json ./
COPY moduleProspec-1dc4f634c6c14f0913f8052d2523c56f04d7738b/package-lock.json ./

# Installer les dépendances
RUN npm ci

# Copier le code source du frontend
COPY moduleProspec-1dc4f634c6c14f0913f8052d2523c56f04d7738b/ .

# Build l'application
RUN npm run build

# Étape de production avec nginx
FROM nginx:alpine

# Copier les fichiers buildés
COPY --from=0 /app/dist /usr/share/nginx/html

# Script de démarrage qui crée la config nginx avec le bon port
RUN echo '#!/bin/sh' > /start.sh && \
    echo 'PORT=${PORT:-10000}' >> /start.sh && \
    echo 'echo "Starting nginx on port $PORT"' >> /start.sh && \
    echo 'cat > /etc/nginx/conf.d/default.conf << EOF' >> /start.sh && \
    echo 'server {' >> /start.sh && \
    echo '    listen $PORT;' >> /start.sh && \
    echo '    server_name localhost;' >> /start.sh && \
    echo '    location / {' >> /start.sh && \
    echo '        root /usr/share/nginx/html;' >> /start.sh && \
    echo '        index index.html index.htm;' >> /start.sh && \
    echo '        try_files \$uri \$uri/ /index.html;' >> /start.sh && \
    echo '    }' >> /start.sh && \
    echo '    location ~* \\.(js|css|png|jpg|jpeg|gif|ico|svg)\$ {' >> /start.sh && \
    echo '        expires 1y;' >> /start.sh && \
    echo '        add_header Cache-Control "public, immutable";' >> /start.sh && \
    echo '        root /usr/share/nginx/html;' >> /start.sh && \
    echo '    }' >> /start.sh && \
    echo '}' >> /start.sh && \
    echo 'EOF' >> /start.sh && \
    echo 'cat /etc/nginx/conf.d/default.conf' >> /start.sh && \
    echo 'exec nginx -g "daemon off;"' >> /start.sh && \
    chmod +x /start.sh

# Exposer le port dynamique de Render
EXPOSE $PORT

CMD ["/start.sh"]