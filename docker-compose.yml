version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-prospection_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend NestJS
  backend:
    build: 
      context: ./backend
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-prospection_db}
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/ssl:/app/ssl:ro

  # Serveur Python pour streaming audio
  python-server:
    build: 
      context: ./backend/python-server
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1

  # Frontend React
  frontend:
    build: 
      context: ./moduleProspec-1dc4f634c6c14f0913f8052d2523c56f04d7738b
    ports:
      - "80:80"
    depends_on:
      - backend
      - python-server

volumes:
  postgres_data: